plugins {
    id 'java'
    id 'com.jrmcdonald.ms-gradle-baseline' version "${gradleBaselinePluginVerson}"
}

allprojects {
    group = 'com.jrmcdonald'
    version = "${version}"

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
        maven {
            url = 'https://maven.pkg.github.com/jrmcdonald/ms-common'
            credentials {
                username = "jrmcdonald"
                password = project.findProperty('GITHUB_TOKEN') ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    configurations {
        commonPlatform
        compileOnly.extendsFrom(commonPlatform)
        annotationProcessor.extendsFrom(commonPlatform)
        testCompileOnly.extendsFrom(commonPlatform)
        testAnnotationProcessor.extendsFrom(commonPlatform)
        implementation.extendsFrom(commonPlatform)
        testImplementation.extendsFrom(commonPlatform)
        testFixturesImplementation.extendsFrom(commonPlatform)

        [apiElements, runtimeElements].each {
            it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
            it.outgoing.artifact(bootJar)
        }
    }

    dependencies {
        commonPlatform platform("com.jrmcdonald:ms-common-bom:${commonPlatformVersion}")

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'com.github.spotbugs:spotbugs-annotations'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.force66:BeanTester'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    compileJava {
        options.compilerArgs << "-Werror"
        options.compilerArgs << "-Xlint:all"
        options.compilerArgs << "-Xlint:-try"
        options.compilerArgs << "-Xlint:-processing"
    }

    test {
        useJUnitPlatform()
    }
}

apply from: "${rootDir}/gradle/dependencies.gradle"
